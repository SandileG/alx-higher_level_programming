Test Cases for 1-my_list.py

1. Creating an Empty MyList:
    - Description: Create an empty MyList and print it.
    - Test Input:
        ```
        my_list = MyList()
        print(my_list)
        ```
    - Expected Output:
        ```
        []
        ```

2. Appending Elements to MyList:
    - Description: Append integers to MyList and print it.
    - Test Input:
        ```
        my_list = MyList()
        my_list.append(5)
        my_list.append(2)
        my_list.append(7)
        print(my_list)
        ```
    - Expected Output:
        ```
        [5, 2, 7]
        ```

3. Sorting MyList:
    - Description: Append elements to MyList, print it, and then print it sorted.
    - Test Input:
        ```
        my_list = MyList()
        my_list.append(3)
        my_list.append(1)
        my_list.append(4)
        print(my_list)
        my_list.print_sorted()
        ```
    - Expected Output:
        ```
        [3, 1, 4]
        [1, 3, 4]
        ```

4. Sorting an Empty MyList:
    - Description: Create an empty MyList and print it sorted.
    - Test Input:
        ```
        my_list = MyList()
        my_list.print_sorted()
        ```
    - Expected Output:
        ```
        []
        ```

5. Sorting MyList with Repeated Elements:
    - Description: Append repeated elements to MyList, print it, and then print it sorted.
    - Test Input:
        ```
        my_list = MyList()
        my_list.append(2)
        my_list.append(1)
        my_list.append(2)
        print(my_list)
        my_list.print_sorted()
        ```
    - Expected Output:
        ```
        [2, 1, 2]
        [1, 2, 2]
